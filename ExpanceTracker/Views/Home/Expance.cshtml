@model ExpenseTracker.Models.Expance

@{
    ViewBag.Title = "Expance";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Expance</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Category, ViewBag.categoryselect as SelectList, "Select Category", new { @class = "form-control", required = (string)null })
                
            </div>
        </div>

        

        

        <div class="form-group">
            @Html.LabelFor(model => model.ExpName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpName, new { htmlAttributes = new { @class = "form-control", required = (string)null } })
                @Html.ValidationMessageFor(model => model.ExpName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpAmt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpAmt, new { htmlAttributes = new { @class = "form-control", required = (string)null } })
                @Html.ValidationMessageFor(model => model.ExpAmt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpDescription, new { htmlAttributes = new { @class = "form-control", required = (string)null } })
                @Html.ValidationMessageFor(model => model.ExpDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpDate, new { htmlAttributes = new { @class = "form-control", id = "date", required = (string)null } })
                @Html.ValidationMessageFor(model => model.ExpDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    
    
    document.getElementById('date').valueAsDate = new Date();
   
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
